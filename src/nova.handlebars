#!/bin/bash

gnome_color () {

    AA=${1:1:2}
    BB=${1:3:2}
    CC=${1:5:2}

    echo "#${AA}${AA}${BB}${BB}${CC}${CC}"
}

# {{normal.black}}
# {{normal.red}}
# {{normal.green}}
# {{normal.yellow}}
# {{normal.blue}}
# {{bright.magenta}}
# {{normal.cyan}}
# {{bright.white}}
COLOR_01=""           # HOST
COLOR_02=""           # SYNTAX_STRING
COLOR_03=""           # COMMAND
COLOR_04=""           # COMMAND_COLOR2
COLOR_05=""           # PATH
COLOR_06=""           # SYNTAX_VAR
COLOR_07=""           # PROMP
COLOR_08=""           #

COLOR_09=""           #
COLOR_10=""           # COMMAND_ERROR
COLOR_11=""           # EXEC
COLOR_12=""           #
COLOR_13=""           # FOLDER
COLOR_14=""           #
COLOR_15=""           #
COLOR_16=""           #

BACKGROUND_COLOR=$(gnome_color '{{normal.black}}')   # Background Color
FOREGROUND_COLOR=$(gnome_color '{{normal.cyan}}')   # Text
CURSOR_COLOR="$FOREGROUND_COLOR" # Cursor

gnomeVersion="$(expr "$(gnome-terminal --version)" : '.* \(.*[.].*[.].*\)$')"
dircolors_checked=false

profiles_path=/org/gnome/terminal/legacy/profiles:

set_theme() {
  profile=$(get_uuid $1)
  profile_path=$profiles_path/$profile

  # TODO: get real palette colors
  dconf write $profile_path/palette "['rgb(7,54,66)', 'rgb(220,50,47)', 'rgb(133,153,0)', 'rgb(181,137,0)', 'rgb(38,139,210)', 'rgb(211,54,130)', 'rgb(42,161,152)', 'rgb(238,232,213)', 'rgb(0,43,54)', 'rgb(203,75,22)', 'rgb(88,110,117)', 'rgb(101,123,131)', 'rgb(131,148,150)', 'rgb(108,113,196)', 'rgb(147,161,161)', 'rgb(253,246,227)']"

  # set foreground, background and highlight color
  # TODO: set bold color
  # dconf write $profile_path/bold-color "'$SOME_COLOR'"
  dconf write $profile_path/background-color "'$BACKGROUND_COLOR'"
  dconf write $profile_path/foreground-color "'$FOREGROUND_COLOR'"

  # make sure the profile is set to not use theme colors
  dconf write $profile_path/use-theme-colors "false"

  # set highlighted color to be different from foreground color
  dconf write $profile_path/bold-color-same-as-fg "false"
}


get_uuid() {
  profiles=($(dconf list $profiles_path/ | grep ^: | sed 's/\///g'))
  # Print the UUID linked to the profile name sent in parameter
  local profile_name=$1
  for i in ${!profiles[*]}
    do
      if [[ "$(dconf read $profiles_path/${profiles[i]}/visible-name)" == \
          "'$profile_name'" ]]
        then echo "${profiles[i]}"
        return 0
      fi
    done
  echo "$profile_name"
}

set_theme $1
